flowchart LR
    %% External Ports/Interfaces
    classDef interface fill:#e0f0ff,stroke:#333,stroke-width:1px
    classDef clock fill:#ffe0cc,stroke:#333,stroke-width:1px
    classDef reset fill:#ffcccc,stroke:#333,stroke-width:1px
    classDef data fill:#ccffcc,stroke:#333,stroke-width:1px
    classDef status fill:#ffffcc,stroke:#333,stroke-width:1px
    
    %% System Signals
    SYS_CLK([sys_clk]):::clock --> TOP
    SYS_RESET([sys_resetn]):::reset --> TOP
    
    %% Input AXI-Stream Interface
    S_AXIS_CLK([s_axis_aclk]):::clock --> TOP
    S_AXIS_DATA([s_axis_tdata]):::data --> TOP
    S_AXIS_VALID([s_axis_tvalid]) --> TOP
    TOP --> S_AXIS_READY([s_axis_tready])
    
    %% Output AXI-Stream Interface
    M_AXIS_CLK([m_axis_aclk]):::clock --> TOP
    M_AXIS_READY([m_axis_tready]) --> TOP
    TOP --> M_AXIS_DATA([m_axis_tdata]):::data
    TOP --> M_AXIS_VALID([m_axis_tvalid])
    
    %% AXI-Lite Configuration Interface
    subgraph AXI_LITE [AXI-Lite Interface]
        direction TB
        S_AXI_CLK([s_axi_aclk]):::clock
        S_AXI_RESET([s_axi_aresetn]):::reset
        
        subgraph AXI_WRITE [Write Channel]
            direction LR
            S_AXI_AWADDR([s_axi_awaddr])
            S_AXI_AWVALID([s_axi_awvalid])
            S_AXI_AWREADY([s_axi_awready])
            S_AXI_WDATA([s_axi_wdata])
            S_AXI_WVALID([s_axi_wvalid])
            S_AXI_WREADY([s_axi_wready])
            S_AXI_BRESP([s_axi_bresp])
            S_AXI_BVALID([s_axi_bvalid])
            S_AXI_BREADY([s_axi_bready])
        end
        
        subgraph AXI_READ [Read Channel]
            direction LR
            S_AXI_ARADDR([s_axi_araddr])
            S_AXI_ARVALID([s_axi_arvalid])
            S_AXI_ARREADY([s_axi_arready])
            S_AXI_RDATA([s_axi_rdata])
            S_AXI_RRESP([s_axi_rresp])
            S_AXI_RVALID([s_axi_rvalid])
            S_AXI_RREADY([s_axi_rready])
        end
    end
    
    AXI_LITE --> TOP
    TOP --> AXI_LITE
    
    %% Status Output
    TOP --> STATUS_LOCK([status_lock]):::status
    
    %% The Top-Level Entity with Internal Components
    subgraph TOP [pluto_hodgart_msk_top]
        direction TB
        
        %% Configuration Registers
        REGS[Configuration Registers]
        
        %% Core Demodulator Component
        subgraph DEMOD [hodgart_msk_demodulator]
            direction TB
            MSK_CORE[MSK Demodulation Core]
        end
        
        %% Doppler Compensation
        DOPPLER[Doppler Compensation]
        
        %% Bit Processing
        BIT_PROC[Bit Processing & Buffering]
        
        %% Signal Flow
        DOPPLER --> DEMOD
        DEMOD --> BIT_PROC
        REGS --> DEMOD
        REGS --> DOPPLER
    end
